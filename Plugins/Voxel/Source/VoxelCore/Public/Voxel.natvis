<?xml version="1.0" encoding="utf-8"?>
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">

  <!-- TVoxelStaticArray visualizer -->
  <Type Name="TVoxelStaticArray&lt;*,*,*&gt;">
    <DisplayString>Num={$T2}</DisplayString>
    <Expand>
      <ArrayItems>
        <Size>$T2</Size>
        <ValuePointer>(TVoxelStaticArray&lt;$T1,$T2,$T3&gt;::ElementType*)Data</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <!-- TVoxelStaticBitArray visualizer -->
  <Type Name="TVoxelStaticBitArray&lt;*&gt;">
    <DisplayString>Num={$T1}</DisplayString>
    <Expand>
      <ArrayItems>
        <Size>($T1 + 31) / 32</Size>
        <ValuePointer>(FVoxelBitArrayVisualizerEntry*)Array.Data</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <!-- TVoxelBitArray visualizer -->
  <Type Name="TVoxelBitArray&lt;*&gt;">
    <DisplayString>Num={NumBits}, Max={MaxBits}</DisplayString>
    <Expand>
      <ArrayItems>
        <Size>(NumBits + 31) / 32</Size>
        <ValuePointer Condition="AllocatorInstance.SecondaryData.Data == 0">(FVoxelBitArrayVisualizerEntry*)AllocatorInstance.InlineData</ValuePointer>
        <ValuePointer Condition="AllocatorInstance.SecondaryData.Data != 0">(FVoxelBitArrayVisualizerEntry*)AllocatorInstance.SecondaryData.Data</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>
  
  <!-- FVoxelBitArrayVisualizerEntry visualizer -->
  <Type Name="FVoxelBitArrayVisualizerEntry">
    <DisplayString>{Bit0}{Bit1}{Bit2}{Bit3}{Bit4}{Bit5}{Bit6}{Bit7}{Bit8}{Bit9}{Bit10}{Bit11}{Bit12}{Bit13}{Bit14}{Bit15}{Bit16}{Bit17}{Bit18}{Bit19}{Bit20}{Bit21}{Bit22}{Bit23}{Bit24}{Bit25}{Bit26}{Bit27}{Bit28}{Bit29}{Bit30}{Bit31}</DisplayString>
  </Type>

  <!-- TVoxelPointerOctree::FChildrenPtr visualizer -->
  <Type Name="TVoxelPointerOctree&lt;*&gt;::FChildrenPtr">
    <DisplayString Condition="!Ptr">Empty</DisplayString>
    <DisplayString Condition="Ptr">Num=8</DisplayString>
    <Expand>
      <ArrayItems Condition="Ptr">
        <Size>8</Size>
        <ValuePointer>Ptr</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <!-- IVoxelSubsystem visualizer -->
  <Type Name="IVoxelSubsystem">
    <DisplayString>{CachedCppName}</DisplayString>
  </Type>

  <!-- FFloat16 visualizer -->
  <Type Name="FFloat16">
    <DisplayString Condition = "Components.Exponent == 0">{(0.00006103515625f * Components.Mantissa/1024.0f)}</DisplayString>
    <DisplayString Condition = "Components.Exponent == 31 &amp;&amp; Components.Mantissa == 0">{Components.Sign*-2+1}.#INFINITY</DisplayString>
    <DisplayString Condition = "Components.Exponent == 31">#NaN</DisplayString>
    <DisplayString Condition = "Components.Exponent &lt; 15">{1.0f / (1 &lt;&lt; (15 - Components.Exponent)) * (Components.Sign*-2+1.0f) * (1.0f + Components.Mantissa/1024.0f)}</DisplayString>
    <DisplayString Condition = "Components.Exponent &gt; 15">{(1 &lt;&lt; (Components.Exponent-15)) * (Components.Sign*-2+1.0f) * (1.0f + Components.Mantissa/1024.0f)}</DisplayString>
    <DisplayString>{(Components.Sign*-2+1) * 1.0f + Components.Mantissa/1024.0f}</DisplayString>
  </Type>

  <!-- FVoxelInstancedStruct visualizer -->
  <Type Name="FVoxelInstancedStruct">
    <DisplayString Condition = "ScriptStruct == nullptr">Unset</DisplayString>
    <DisplayString Condition = "ScriptStruct != nullptr">Type=F{ScriptStruct->NamePrivate}</DisplayString>
    <Expand>
      <ExpandedItem Condition="ScriptStruct != nullptr">*(FVoxelVirtualStruct*)StructMemory</ExpandedItem>
    </Expand>
  </Type>

  <!-- TVoxelInstancedStruct visualizer -->
  <Type Name="TVoxelInstancedStruct&lt;*&gt;">
    <DisplayString Condition = "ScriptStruct == nullptr">Unset</DisplayString>
    <DisplayString Condition = "ScriptStruct != nullptr">Type=F{ScriptStruct->NamePrivate}</DisplayString>
    <Expand>
      <ExpandedItem Condition="ScriptStruct != nullptr">*($T1*)StructMemory</ExpandedItem>
    </Expand>
  </Type>

  <!-- FVoxelFloatBufferView visualizer -->
  <Type Name="FVoxelFloatBufferView">
    <DisplayString Condition="!PrivateArray.Object">Invalid</DisplayString>
    <DisplayString Condition="PrivateArray.Object">Num={PrivateArray.Object->ArrayNum / sizeof(float)}</DisplayString>
    <Expand>
      <ArrayItems Condition="PrivateArray.Object">
        <Size>PrivateArray.Object->ArrayNum / sizeof(float)</Size>
        <ValuePointer>(float*)PrivateArray.Object->AllocatorInstance.Data</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <!-- FVoxelInt32BufferView visualizer -->
  <Type Name="FVoxelInt32BufferView">
    <DisplayString Condition="!PrivateArray.Object">Invalid</DisplayString>
    <DisplayString Condition="PrivateArray.Object">Num={PrivateArray.Object->ArrayNum / sizeof(int32)}</DisplayString>
    <Expand>
      <ArrayItems Condition="PrivateArray.Object">
        <Size>PrivateArray.Object->ArrayNum / sizeof(int32)</Size>
        <ValuePointer>(int32*)PrivateArray.Object->AllocatorInstance.Data</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <!-- TVoxelFlatOctree::FNode visualizer -->
  <Type Name="TVoxelFlatOctree&lt;*&gt;::FNode">
    <DisplayString>Index={Index} Height={DebugOctree[Index].Height} Bounds={DebugOctree[Index].CachedBounds}</DisplayString>
    <Expand>
      <Item Name="Height">DebugOctree[Index].Height</Item>
      <Item Name="Size">DebugChunkSize &lt;&lt; DebugOctree[Index].Height</Item>
      <Item Name="Bounds">DebugOctree[Index].CachedBounds</Item>
      <Item Name="Data">DebugOctree[Index].Data</Item>
      <Item Name="Children">DebugOctree[Index].Children</Item>
      <Item Name="Center">DebugOctree[Index].Center</Item>
    </Expand>
  </Type>

  <!-- TVoxelArray<*,TFixedAllocator<*> > visualizer -->
  <Type Name="TVoxelArray&lt;*,TFixedAllocator&lt;*&gt;&gt;">
    <DisplayString Condition="ArrayNum == 0">Empty</DisplayString>
    <DisplayString Condition="ArrayNum &lt; 0">Invalid</DisplayString>
    <DisplayString Condition="ArrayMax &lt; ArrayNum">Invalid</DisplayString>
    <DisplayString Condition="ArrayMax &gt;= ArrayNum">Num={ArrayNum}</DisplayString>
    <Expand>
      <ArrayItems Condition="ArrayNum &lt;= ArrayMax">
        <Size>ArrayNum</Size>
        <ValuePointer>(TVoxelArray&lt;$T1,TFixedAllocator&lt;$T2&gt; &gt;::ElementType*)AllocatorInstance.InlineData</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <!-- TVoxelArray<*,TInlineAllocator<*,*> > visualizer -->
  <Type Name="TVoxelArray&lt;*,TInlineAllocator&lt;*,*&gt;&gt;">
    <DisplayString Condition="ArrayNum == 0">Empty</DisplayString>
    <DisplayString Condition="ArrayNum &lt; 0">Invalid</DisplayString>
    <DisplayString Condition="ArrayMax &lt; ArrayNum">Invalid</DisplayString>
    <DisplayString Condition="ArrayMax &gt;= ArrayNum">Num={ArrayNum}</DisplayString>
    <Expand>
      <ArrayItems Condition="ArrayNum &lt;= ArrayMax">
        <Size>ArrayNum</Size>
        <ValuePointer Condition="AllocatorInstance.SecondaryData.Data == 0">(TVoxelArray&lt;$T1,TInlineAllocator&lt;$T2,$T3&gt; &gt;::ElementType*)AllocatorInstance.InlineData</ValuePointer>
        <ValuePointer Condition="AllocatorInstance.SecondaryData.Data != 0">(TVoxelArray&lt;$T1,TInlineAllocator&lt;$T2,$T3&gt; &gt;::ElementType*)AllocatorInstance.SecondaryData.Data</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <!-- TVoxelArray<*,TMemoryImageAllocator<*>> visualizer -->
  <Type Name="TVoxelArray&lt;*,TMemoryImageAllocator&lt;*&gt;&gt;">
    <DisplayString Condition="ArrayNum == 0">Empty</DisplayString>
    <DisplayString Condition="ArrayNum &lt; 0">Invalid</DisplayString>
    <DisplayString Condition="ArrayMax &lt; ArrayNum">Invalid</DisplayString>
    <DisplayString Condition="ArrayMax &gt;= ArrayNum">Num={ArrayNum}</DisplayString>
    <DisplayString>Ptr={AllocatorInstance.Data.UnfrozenPtr}</DisplayString>
    <Expand>
      <ArrayItems Condition="ArrayNum &lt;= ArrayMax">
        <Size>ArrayNum</Size>
        <ValuePointer Condition="(AllocatorInstance.Data.Frozen.OffsetFromThis &amp; 1) != 0">(TVoxelArray&lt;$T1,TMemoryImageAllocator&lt;$T2&gt; &gt;::ElementType*)( (char*)&amp;AllocatorInstance.Data + (AllocatorInstance.Data.Frozen.OffsetFromThis >> 1))</ValuePointer>
        <ValuePointer Condition="(AllocatorInstance.Data.Frozen.OffsetFromThis &amp; 1) == 0">(TVoxelArray&lt;$T1,TMemoryImageAllocator&lt;$T2&gt; &gt;::ElementType*)AllocatorInstance.Data.UnfrozenPtr</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <!-- TVoxelArray visualizer -->
  <Type Name="TVoxelArray&lt;*,*&gt;">
    <DisplayString Condition="ArrayNum == 0">Empty</DisplayString>
    <DisplayString Condition="ArrayNum &lt; 0">Invalid</DisplayString>
    <DisplayString Condition="ArrayMax &lt; ArrayNum">Invalid</DisplayString>
    <DisplayString Condition="ArrayMax &gt;= ArrayNum">Num={ArrayNum}</DisplayString>
    <Expand>
      <ArrayItems Condition="ArrayNum &lt;= ArrayMax">
        <Size>ArrayNum</Size>
        <ValuePointer>(TVoxelArray&lt;$T1,$T2&gt;::ElementType*)AllocatorInstance.Data</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <!-- TVoxelArray<char> visualizers -->
  <Type Name="TVoxelArray&lt;char,*&gt;">
    <DisplayString Condition="ArrayNum == 0">Empty</DisplayString>
    <DisplayString Condition="ArrayNum &lt; 0">Invalid</DisplayString>
    <DisplayString Condition="ArrayMax &lt; ArrayNum">Invalid</DisplayString>
    <DisplayString Condition="ArrayMax &gt;= ArrayNum">Num={ArrayNum} {(char*)AllocatorInstance.Data,[ArrayNum]s}</DisplayString>
    <StringView Condition="ArrayMax &gt;= ArrayNum">(char*)AllocatorInstance.Data,[ArrayNum]s</StringView>
    <Expand>
      <ArrayItems Condition="ArrayNum &lt;= ArrayMax">
        <Size>ArrayNum</Size>
        <ValuePointer>(char*)AllocatorInstance.Data</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>
  <Type Name="TVoxelArray&lt;char,TFixedAllocator&lt;*&gt;&gt;">
    <DisplayString Condition="ArrayNum == 0">Empty</DisplayString>
    <DisplayString Condition="ArrayNum &lt; 0">Invalid</DisplayString>
    <DisplayString Condition="ArrayMax &lt; ArrayNum">Invalid</DisplayString>
    <DisplayString Condition="ArrayMax &gt;= ArrayNum">Num={ArrayNum} {(char*)AllocatorInstance.InlineData,[ArrayNum]s}</DisplayString>
    <StringView Condition="ArrayMax &gt;= ArrayNum">(char*)AllocatorInstance.InlineData,[ArrayNum]s</StringView>
    <Expand>
      <ArrayItems Condition="ArrayNum &lt;= ArrayMax">
        <Size>ArrayNum</Size>
        <ValuePointer>(char*)AllocatorInstance.InlineData</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>
  <Type Name="TVoxelArray&lt;char,TInlineAllocator&lt;*,*&gt;&gt;">
    <DisplayString Condition="ArrayNum == 0">Empty</DisplayString>
    <DisplayString Condition="ArrayNum &lt; 0">Invalid</DisplayString>
    <DisplayString Condition="ArrayMax &lt; ArrayNum">Invalid</DisplayString>
    <DisplayString Condition="ArrayMax &gt;= ArrayNum &amp;&amp; AllocatorInstance.SecondaryData.Data == 0">Num={ArrayNum} {(char*)AllocatorInstance.InlineData,[ArrayNum]s}</DisplayString>
    <DisplayString Condition="ArrayMax &gt;= ArrayNum &amp;&amp; AllocatorInstance.SecondaryData.Data != 0">Num={ArrayNum} {(char*)AllocatorInstance.SecondaryData.Data,[ArrayNum]s}</DisplayString>
    <StringView Condition="ArrayMax &gt;= ArrayNum &amp;&amp; AllocatorInstance.SecondaryData.Data == 0">(char*)AllocatorInstance.InlineData,[ArrayNum]s</StringView>
    <StringView Condition="ArrayMax &gt;= ArrayNum &amp;&amp; AllocatorInstance.SecondaryData.Data != 0">(char*)AllocatorInstance.SecondaryData.Data,[ArrayNum]s</StringView>
    <Expand>
      <ArrayItems Condition="ArrayNum &lt;= ArrayMax">
        <Size>ArrayNum</Size>
        <ValuePointer Condition="AllocatorInstance.SecondaryData.Data == 0">(char*)AllocatorInstance.InlineData</ValuePointer>
        <ValuePointer Condition="AllocatorInstance.SecondaryData.Data != 0">(char*)AllocatorInstance.SecondaryData.Data</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <!-- TVoxelArray<unsigned char> visualizers -->
  <Type Name="TVoxelArray&lt;unsigned char,*&gt;">
    <DisplayString Condition="ArrayNum == 0">Empty</DisplayString>
    <DisplayString Condition="ArrayNum &lt; 0">Invalid</DisplayString>
    <DisplayString Condition="ArrayMax &lt; ArrayNum">Invalid</DisplayString>
    <DisplayString Condition="ArrayMax &gt;= ArrayNum">Num={ArrayNum} {(unsigned char*)AllocatorInstance.Data,[ArrayNum]s}</DisplayString>
    <StringView Condition="ArrayMax &gt;= ArrayNum">(unsigned char*)AllocatorInstance.Data,[ArrayNum]s</StringView>
    <Expand>
      <ArrayItems Condition="ArrayNum &lt;= ArrayMax">
        <Size>ArrayNum</Size>
        <ValuePointer>(unsigned char*)AllocatorInstance.Data</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>
  <Type Name="TVoxelArray&lt;unsigned char,TFixedAllocator&lt;*&gt;&gt;">
    <DisplayString Condition="ArrayNum == 0">Empty</DisplayString>
    <DisplayString Condition="ArrayNum &lt; 0">Invalid</DisplayString>
    <DisplayString Condition="ArrayMax &lt; ArrayNum">Invalid</DisplayString>
    <DisplayString Condition="ArrayMax &gt;= ArrayNum">Num={ArrayNum} {(unsigned char*)AllocatorInstance.InlineData,[ArrayNum]s}</DisplayString>
    <StringView Condition="ArrayMax &gt;= ArrayNum">(unsigned char*)AllocatorInstance.InlineData,[ArrayNum]s</StringView>
    <Expand>
      <ArrayItems Condition="ArrayNum &lt;= ArrayMax">
        <Size>ArrayNum</Size>
        <ValuePointer>(unsigned char*)AllocatorInstance.InlineData</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>
  <Type Name="TVoxelArray&lt;unsigned char,TInlineAllocator&lt;*,*&gt;&gt;">
    <DisplayString Condition="ArrayNum == 0">Empty</DisplayString>
    <DisplayString Condition="ArrayNum &lt; 0">Invalid</DisplayString>
    <DisplayString Condition="ArrayMax &lt; ArrayNum">Invalid</DisplayString>
    <DisplayString Condition="ArrayMax &gt;= ArrayNum &amp;&amp; AllocatorInstance.SecondaryData.Data == 0">Num={ArrayNum} {(unsigned char*)AllocatorInstance.InlineData,[ArrayNum]s}</DisplayString>
    <DisplayString Condition="ArrayMax &gt;= ArrayNum &amp;&amp; AllocatorInstance.SecondaryData.Data != 0">Num={ArrayNum} {(unsigned char*)AllocatorInstance.SecondaryData.Data,[ArrayNum]s}</DisplayString>
    <StringView Condition="ArrayMax &gt;= ArrayNum &amp;&amp; AllocatorInstance.SecondaryData.Data == 0">(unsigned char*)AllocatorInstance.InlineData,[ArrayNum]s</StringView>
    <StringView Condition="ArrayMax &gt;= ArrayNum &amp;&amp; AllocatorInstance.SecondaryData.Data != 0">(unsigned char*)AllocatorInstance.SecondaryData.Data,[ArrayNum]s</StringView>
    <Expand>
      <ArrayItems Condition="ArrayNum &lt;= ArrayMax">
        <Size>ArrayNum</Size>
        <ValuePointer Condition="AllocatorInstance.SecondaryData.Data == 0">(unsigned char*)AllocatorInstance.InlineData</ValuePointer>
        <ValuePointer Condition="AllocatorInstance.SecondaryData.Data != 0">(unsigned char*)AllocatorInstance.SecondaryData.Data</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <!-- TVoxelArray<wchar_t> visualizers -->
  <Type Name="TVoxelArray&lt;wchar_t,*&gt;">
    <DisplayString Condition="ArrayNum == 0">Empty</DisplayString>
    <DisplayString Condition="ArrayNum &lt; 0">Invalid</DisplayString>
    <DisplayString Condition="ArrayMax &lt; ArrayNum">Invalid</DisplayString>
    <DisplayString Condition="ArrayMax &gt;= ArrayNum">Num={ArrayNum} {(wchar_t*)AllocatorInstance.Data,[ArrayNum]su}</DisplayString>
    <StringView Condition="ArrayMax &gt;= ArrayNum">(wchar_t*)AllocatorInstance.Data,[ArrayNum]su</StringView>
    <Expand>
      <ArrayItems Condition="ArrayNum &lt;= ArrayMax">
        <Size>ArrayNum</Size>
        <ValuePointer>(wchar_t*)AllocatorInstance.Data</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>
  <Type Name="TVoxelArray&lt;wchar_t,TFixedAllocator&lt;*&gt;&gt;">
    <DisplayString Condition="ArrayNum == 0">Empty</DisplayString>
    <DisplayString Condition="ArrayNum &lt; 0">Invalid</DisplayString>
    <DisplayString Condition="ArrayMax &lt; ArrayNum">Invalid</DisplayString>
    <DisplayString Condition="ArrayMax &gt;= ArrayNum">Num={ArrayNum} {(wchar_t*)AllocatorInstance.InlineData,[ArrayNum]su}</DisplayString>
    <StringView Condition="ArrayMax &gt;= ArrayNum">(wchar_t*)AllocatorInstance.InlineData,[ArrayNum]su</StringView>
    <Expand>
      <ArrayItems Condition="ArrayNum &lt;= ArrayMax">
        <Size>ArrayNum</Size>
        <ValuePointer>(wchar_t*)AllocatorInstance.InlineData</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>
  <Type Name="TVoxelArray&lt;wchar_t,TInlineAllocator&lt;*,*&gt;&gt;">
    <DisplayString Condition="ArrayNum == 0">Empty</DisplayString>
    <DisplayString Condition="ArrayNum &lt; 0">Invalid</DisplayString>
    <DisplayString Condition="ArrayMax &lt; ArrayNum">Invalid</DisplayString>
    <DisplayString Condition="ArrayMax &gt;= ArrayNum &amp;&amp; AllocatorInstance.SecondaryData.Data == 0">Num={ArrayNum} {(wchar_t*)AllocatorInstance.InlineData,[ArrayNum]su}</DisplayString>
    <DisplayString Condition="ArrayMax &gt;= ArrayNum &amp;&amp; AllocatorInstance.SecondaryData.Data != 0">Num={ArrayNum} {(wchar_t*)AllocatorInstance.SecondaryData.Data,[ArrayNum]su}</DisplayString>
    <StringView Condition="ArrayMax &gt;= ArrayNum &amp;&amp; AllocatorInstance.SecondaryData.Data == 0">(wchar_t*)AllocatorInstance.InlineData,[ArrayNum]su</StringView>
    <StringView Condition="ArrayMax &gt;= ArrayNum &amp;&amp; AllocatorInstance.SecondaryData.Data != 0">(wchar_t*)AllocatorInstance.SecondaryData.Data,[ArrayNum]su</StringView>
    <Expand>
      <ArrayItems Condition="ArrayNum &lt;= ArrayMax">
        <Size>ArrayNum</Size>
        <ValuePointer Condition="AllocatorInstance.SecondaryData.Data == 0">(wchar_t*)AllocatorInstance.InlineData</ValuePointer>
        <ValuePointer Condition="AllocatorInstance.SecondaryData.Data != 0">(wchar_t*)AllocatorInstance.SecondaryData.Data</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

</AutoVisualizer>
